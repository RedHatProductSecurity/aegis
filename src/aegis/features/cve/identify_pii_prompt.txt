{% extends "system_prompt.txt" %}
{% block user_type %}
user:  Your task is to meticulously examine the provided JSON object and identify any instances of Personally Identifiable Information (PII).

# Definition of PII for this task:

    PII includes, but is not limited to:
        Direct Identifiers: Full names, email addresses, phone numbers, passwords, social security numbers (SSN), national identification numbers, passport numbers, driver's license numbers, bank account numbers, credit card numbers.
        Indirect Identifiers (that can be linked to an individual): Dates of birth, home addresses, precise geographical coordinates, IP addresses, MAC addresses, device IDs, biometric data (e.g., fingerprints, facial recognition data), unique identifiers from cookies or advertising.
        Sensitive Information: Health information, genetic information, racial or ethnic origin, political opinions, religious or philosophical beliefs, trade union membership, sexual orientation, criminal records.

# Instructions for Analysis:

    Thorough Traversal: Recursively traverse the entire JSON object, including nested arrays and objects.
    Key and Value Analysis: Examine both the keys (field names) and values within the JSON. PII can sometimes be indicated by a key name (e.g., "email", "phone_number") even if the value is empty or generic, but focus primarily on values.
    Pattern Recognition: Look for common patterns associated with PII, such as:
        Email address formats (e.g., user@domain.com)
        Phone number formats (various international formats)
        Numerical sequences that resemble Social Security numbers/national IDs/credit card numbers (consider common lengths and checksums if possible, but err on the side of caution).
        Keywords in keys or values that suggest PII (e.g., "name", "address", "dob", "ssn", "health", "policy").
        Anything that looks like a secure password or secret
    Contextual Understanding: Consider the context of the data. For example, a street name alone isn't PII, but a combination of street, city, and postal code often is.

    The following example json

    ```json
    {"title":"this contains jim@webomposite.com"}
    ```
    So the analysis would identify `jim@webcomposite.com` as PII because it contains an email address.

    Taking another example
    ```json
    {"title":"this contains 035-48-2559"},"description":"The fone is +420733228297"}
    ```
    The analysis should identify `035-48-3559` as a ssn and identify +420733228297 as a phone number.

    Example 1: Name and Home Address
    ```json
    {
      "user_profile": {
        "name": "Alice Wonderland",
        "contact": {
          "street": "123 Rabbit Hole Lane",
          "city": "Wonderland",
          "zip": "10001"
        },
        "preferences": ["tea party", "chess"]
      },
      "activity_log": {
        "event": "logged_in",
        "timestamp": "2024-05-29T10:30:00Z"
      }
    }
    ```

    Analysis Should Identify addresses:

        Alice Wonderland as a Full Name.
        123 Rabbit Hole Lane as part of a Home Address.
        Wonderland as part of a Home Address.
        10001 as part of a Home Address.

    Example 2: Date of Birth and IP Address
    ```json
    {
      "system_event": {
        "event_id": "SYS-87654",
        "client_ip": "192.168.1.100",
        "details": {
          "user_agent": "Mozilla/5.0...",
          "session_start": "2025-05-29T14:15:00Z"
        }
      },
      "customer_data": {
        "customer_id": "CUST-9988",
        "dob": "1990-07-15"
      }
    }
    ```

    Analysis Should Identify:

        192.168.1.100 as an IP Address.
        1990-07-15 as a Date of Birth.

    Example 3: Credit Card Number and Health Information
    ```json
    {
      "payment_info": {
        "order_id": "ORD-54321",
        "card_number": "4111222233334444",
        "expiry_date": "12/28"
      },
      "medical_record": {
        "record_id": "MR-ALPHA-001",
        "diagnosis": "Seasonal allergies",
        "patient_notes": "Patient reported sneezing and watery eyes.",
        "genetic_marker": "HLA-DRB1"
      }
    }
    ```
    Analysis Should Identify:

        4111222233334444 as a Credit Card Number.
        Seasonal allergies as Health Information.
        Patient reported sneezing and watery eyes. as Health Information.
        HLA-DRB1 as Genetic Information.

    Example 4: National Identification Number and Biometric Data Hint
    ```json
    {
      "enrollment_form": {
        "form_id": "ENR-007",
        "applicant_id": "ID-9876543210",
        "biometric_hash": "fingerprint_hash_abc123xyz",
        "nationality": "Czech"
      }
    }

    Analysis Should Identify:

        ID-9876543210 as a National Identification Number (assuming context where ID- prefix implies a national ID).
        fingerprint_hash_abc123xyz as Biometric Data.

# Specific instructions for output fields
    explanation:
        If PII is found, create a bulleted list where each item is formatted as PII type:"exact string".
        The exact string cannot be empty.
        The PII type should be a concise description (e.g., "Gender","Race","Email Address", "Phone Number", "Physical Address", "Health Information").
        The "exact string" must be the literal value from the JSON that constitutes the PII.
        A separate bullet point is used for each instance of PII found.
        If NO PII is found, this field should be an empty string ("").
    confidence: Generate a score between 0.00 and 1.00 (two decimal places) indicating confidence in the PII analysis. A higher score means greater certainty.
    contains_PII: Set to true if any PII was identified, false otherwise.

# Additional guidelines for report
- Only report on PII that is present in the provided json.
- Explanation should only contain list of PII found.
- Do not include any code in this report.
- Do not gratitiously repeat information.
- Do not insert line breaks (ex. \n).
- Do not invent or add any information that is not present in the given context.

If PII is found, include a bulleted list of each occurrence of PII in explanation.
Each bullet point should contain the PII type and the exact string found, formatted as "PII type:'exact string'".
If no PII is found, leave this section empty.

To determine how to set contains_PII:
1. If you find at least one instance of PII, set contains_pii:True.
2. If you do not find any PII, set contains_pii:False.

# JSON for analysis
The PII analysis should analyze the following json and identify any PII data in the cve record.
```json
{{context}}
```

# Output Format

Should adhere to the following json schema:
```json
{{schema}}
```
{% endblock %}